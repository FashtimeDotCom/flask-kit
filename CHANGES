Flaskit Changelog
===================

Here you can see the Flaskit evolution.


Version 0.3.1
-------------
- Demo views and templates have been removed. These examples will be in docs
- Helpers are more clear and clean now
- `Flask-Testing` extention is the part of Flaskit
  You can find simple KitTestCase in the `kit.testing` module. Make love and tests
- Nose runner is really good. Use it out of the box
- Database object import in blueprints is fixed
- `Flaskit` is more cool than `Flask-Kit`. Let it be.


Version 0.3
-----------
- Huge architectural problem that gave rise to circular imports was fixed.
  By now you can import and use original app instance everywhere
- Finally, you can define database object once in the `database` module,
  import and use it everywhere like the `app` instance
- Cleaned-up, refactored helpers. By now we have `AppFactory`, `ModulesHelper`
  and `MainAppHelper` classes that encapsulate useful set of helper methods
- Django-style context processors registration system


Version 0.2.2
-------------
- The `manage.py` implementation
- Management command `shell`. The :class:`Shell` from the Flask-Script package
  doesn't work with iPython >= 0.12, so there is custom class to work around that
- Blueprint-by-Templates system implementation
- New helper :class:`BlueprintPackageFactory`
- Management command `createblueprint` to quickly build new blueprint packages


Version 0.2.1
-------------
- The :attr:`APP_MODULE` in settings.py has been renamed to `APP_PACKAGE`
- The :mod:`app` has been renamed to `application`
- More clean `AppFactory` class


Version 0.2
-----------
First big refactoring. Project structure has been frozen.


Version 0.1.1
-------------
Kit core, project rearranging and some example files


Version 0.1
-----------
First release, first commit, rather vague project structure
